package {{.LowerDomain}}

import (
	"context"
)

// ServiceInterface contract for {{.CamelDomain}} service
type ServiceInterface interface {
}

type service struct {
{{- range .Models}}
    {{- if .Action.IsQueryNeeded}}
    {{.CamelModel}}Query {{.LowerModel}}.QueryInterface
    {{- end}}
    {{- if .Action.IsCommandNeeded}}
    {{.CamelModel}}Command {{.LowerModel}}.CommandInterface
    {{- end}}
{{- end}}
}

// Service constructor of {{.Domain}} crud
func Service() ServiceInterface {
	return &service{
{{- range .Models}}
		{{- if .Action.IsQueryNeeded}}
		{{.CamelModel}}Query: {{.LowerModel}}.Query(),
		{{- end}}
		{{- if .Action.IsCommandNeeded}}
		{{.CamelModel}}Command: {{.LowerModel}}.Command(),
		{{- end}}
{{- end}}
	}
}
